---
// data imports
import { menu } from "../data/menu";

// config import
import { SITE } from "../config";

const pathname = Astro.url.pathname;
---

<nav class="fixed w-full z-20 top-0 start-0" id="menu">
	<div class="max-w-screen-xl flex flex-wrap justify-between md:justify-start items-center mx-auto p-4 gap-4">
		<a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
			<span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">
				{SITE.title}
			</span>
		</a>
		<div class="flex md:order-1 space-x-3 md:space-x-0 rtl:space-x-reverse">
			<button
				id="btn-menu"
				data-collapse-toggle="navbar-sticky"
				type="button"
				class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden focus:outline-none focus:ring-2 dark:text-gray-400"
				aria-controls="navbar-sticky"
				aria-expanded="false"
			>
				<span class="sr-only">Open main menu</span>
				<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
					<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"></path>
				</svg>
			</button>
		</div>
		<div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-2" id="navbar-sticky">
			<ul
				class="flex flex-col p-4 md:p-0 mt-4 font-medium text-sm border bg-dark-theme md:bg-transparent border-gray-100 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 dark:border-gray-700"
			>
				{
					menu.map((item) => (
						<li>
							<a
								href={item.href}
								class:list={{
									["block py-2 px-3 rounded md:p-0 nav-link"]: true,
									["active"]: pathname === item.href,
								}}
							>
								{item.label}
							</a>
						</li>
					))
				}
			</ul>
		</div>
	</div>
</nav>

<style>
	.nav-link {
		@apply text-n700 
		hover:text-primary-hover-light 
		transition-colors 
		duration-200
		
		dark:text-n200 
		dark:hover:text-primary-hover-light;
	}

	.active {
		@apply text-primary-hover-light
        bg-n500

        md:text-primary-hover-light
        md:bg-transparent

        dark:text-primary-dark
        dark:bg-dark-theme

        md:dark:text-primary-dark
        md:dark:bg-transparent;
	}
</style>

<script>
	function toggleNav() {
		const btnMenu = document.getElementById("btn-menu");
		const navbar = document.getElementById("navbar-sticky");

		btnMenu?.addEventListener("click", function () {
			navbar?.classList.toggle("hidden");
		});

		document.addEventListener("click", function (event) {
			const target = event.target as HTMLElement;

			if (navbar && btnMenu && !navbar.contains(target) && !btnMenu.contains(target)) {
				if (!navbar.classList.contains("hidden")) {
					navbar.classList.add("hidden");
				}
			}
		});
	}

	toggleNav();

	// Runs on view transitions navigation
	document.addEventListener("astro:after-swap", toggleNav);
</script>
